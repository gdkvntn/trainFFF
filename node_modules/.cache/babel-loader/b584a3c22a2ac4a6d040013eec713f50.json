{"ast":null,"code":"var _jsxFileName = \"/home/lizaveta/anton/react-prj/my-app/src/Fcomponent.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Fcomponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    console.log(items);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"error \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/lizaveta/anton/react-prj/my-app/src/Fcomponent.js"],"names":["React","Component","Card","Fcomponent","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","console","log","message","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC9CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KART,EASSR,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAdT;AAgBH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AACA,QAAIF,KAAJ,EAAW;AACP,0BAAO;AAAA,6BAAUA,KAAK,CAACa,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA,+BACI;AAAA,oBACKC,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACX;AAAA,mCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH;AAEJ;;AArD6C","sourcesContent":["import React, { Component } from 'react'\nimport Card from './Card'\n\nexport default class Fcomponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        }\n    }\n\n    componentDidMount() {\n        debugger\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    })\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    })\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        console.log(items)\n        if (error) {\n            return <p>error {error.message}</p>\n        } else if (!isLoaded) {\n            return <p>Loading...</p>\n        } else {\n            return (\n                <div>\n                    <ul>\n                        {items.map(item => (\n                            <li>\n                                <Card/>\n                            </li>\n                        ))}\n\n                    </ul>\n                </div>\n            )\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}