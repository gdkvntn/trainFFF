{"ast":null,"code":"var _jsxFileName = \"/home/lizaveta/anton/react-prj/my-app/src/Fcomponent.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Fcomponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    console.log(items);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"error \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: el.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 24\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/lizaveta/anton/react-prj/my-app/src/Fcomponent.js"],"names":["React","Component","Fcomponent","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","console","log","message","map","el","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAE,IADG;AAEVC,MAAAA,QAAQ,EAAE,KAFA;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAGKG,MAAD,IAAY;AACT,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIF,KARL,EASKR,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAdL;AAgBH;;AAEEU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA,KAAD;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA2B,KAAKH,KAAtC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AACJ,QAAGF,KAAH,EAAS;AACb,0BAAO;AAAA,6BAAUA,KAAK,CAACa,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACK,KAFD,MAEM,IAAG,CAACZ,QAAJ,EAAa;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFK,MAED;AACD,0BACG;AAAA,+BACI;AAAA,oBACKC,KAAK,CAACY,GAAN,CAAUC,EAAE,iBACT;AAAA,sBACKA,EAAE,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AAWH;AAEF;;AApD+C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Fcomponent extends Component {\n constructor(props) {\n   super(props)\n \n   this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n   }\n }\n \n componentDidMount(){\n     debugger\n     fetch('https://jsonplaceholder.typicode.com/posts')\n     .then(res=> res.json())\n     .then(\n         (result) => {\n            this.setState({\n                isLoaded: true,\n                items: result\n            })\n         },\n         (error) => {\n             this.setState({\n                 isLoaded: true,\n                 error\n             })\n         }\n     )\n }\n\n    render() {\n        const {error,  isLoaded, items} =this.state;\n        console.log(items)\n    if(error){\nreturn <p>error {error.message}</p>\n    }else if(!isLoaded){\n        return <p>Loading...</p>\n    }else{\n        return (\n           <div>\n               <ul>\n                   {items.map(el=>(\n                       <li>\n                           {el.body}\n                       </li>\n                   ))}\n               </ul>\n           </div>\n        )\n    }\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}